---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform gcp storage

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: clouddrove/terraform-gcp-storage

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v1.1.7-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"
  - name: "tfsec"
    image: "https://github.com/clouddrove/terraform-gcp-storage/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-gcp-storage/actions/workflows/tfsec.yml"
  - name: "static-checks"
    image: "https://github.com/clouddrove/terraform-gcp-storage/actions/workflows/terraform.yml/badge.svg"
    url: "https://github.com/clouddrove/terraform-gcp-storage/actions/workflows/terraform.yml"

#  description of this project
description: |-
  Terraform module to create default storage bucket.

# extra content
include:
  - "terraform.md"

# How to use this project
# yamllint disable rule:line-length
usage : |-
  Here are some examples of how you can use this module in your inventory structure:
  ### Default Bucket
  ```hcl
  module "bucket_logs" {
  source              = "clouddrove/storage/google"
  version             = "1.0.0"

  name        = "storage-bucket"
  environment = "test-log-bukcet"
  label_order = ["name", "environment"]
  project_id  = "clouddrove"
  location    = "US"
}

  ```
  ### Encryption Bucket
  ```hcl
  module "bucket" {
  source              = "clouddrove/storage/google"
  version             = "1.0.0"

  name        = "storage-bucket"
  environment = "test-main-bukcet"
  label_order = ["name", "environment"]


  location   = "US"
  project_id = "clouddrove"


  #website
  website = {
  main_page_suffix = "index.html"
  not_found_page   = "404.html"
  }

  #logging
  logging = {
  log_bucket        = module.bucket_logs.bucket.id
  log_object_prefix = "gcs-log"
  }

  #cors
  cors = [{
  origin          = ["http://image-store.com"]
  method          = ["GET", "HEAD", "PUT", "POST", "DELETE"]
  response_header = ["*"]
  max_age_seconds = 3600
  }]

  # versioning
  versioning = true

  #lifecycle_rules
  lifecycle_rules = [{
  action = {
  type          = "SetStorageClass"
  storage_class = "NEARLINE"
  }
  condition = {
  age                        = 60
  created_before             = "2018-08-20"
  with_state                 = "LIVE"
  matches_storage_class      = ["STANDARD"]
  num_newer_versions         = 10
  custom_time_before         = "1970-01-01"
  days_since_custom_time     = 1
  days_since_noncurrent_time = 1
  noncurrent_time_before     = "1970-01-01"
  }
  }]
}

  ```
